# Generated by Selenium IDE
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.support import expected_conditions as ec

from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities


class TestP1():
    def __init__(self):
        self.options = webdriver.ChromeOptions()
        self.driver = webdriver.Chrome(options=self.options)
        self.vars ={}


    def teardown_method(self):
        self.driver.quit()

    def wait_for_window(self, timeout=2):
        time.sleep(round(timeout / 1000))
        wh_now = self.driver.window_handles
        wh_then = self.vars["window_handles"]
        if len(wh_now) > len(wh_then):
            return set(wh_now).difference(set(wh_then)).pop()

    def test_p1(self, url):
        # Test name: p1
        # Step # | name | target | value
        # 1 | open | https://portal.compraspublicas.gob.ec/sercop/cifras/ |
        #self.driver.get("https://portal.compraspublicas.gob.ec/sercop/cifras/")
        self.driver.get(url)
        # 2 | setWindowSize | 1920x1055 |
        self.driver.set_window_size(1920, 1055)
        # 3 | click | css=td:nth-child(1) .rounded |
        self.vars["window_handles"] = self.driver.window_handles
        # 4 | selectWindow | handle=${win7440} |
        self.driver.find_element(By.CSS_SELECTOR, "td:nth-child(1) .rounded").click()
        # 5 | runScript | window.scrollTo(0,0) |
        self.vars["win7440"] = self.wait_for_window(2000)
        # 6 | click | css=#container7e67596d-ca26-4dfa-7065-3402c43f5545 .fill |
        self.driver.switch_to.window(self.vars["win7440"])
        # 7 | click | css=#container9c5b1cb7-6f94-99ed-d3a3-82b84a058a8d .fill |
        self.driver.execute_script("window.scrollTo(0,0)")
        # 8 | click | css=#containerda71d1e6-84c9-330e-c161-8e416bde1417 .fill |
        #self.driver.find_element(By.CLASS_NAME, "columnItemContainer").click()
        time.sleep(50)
        WebDriverWait(self.driver, 10).until(
            ec.element_to_be_clickable((By.CSS_SELECTOR,
                                        "g#container5ecc370c-63f0-a051-67a6-d5c39f611b7c path.fill.ui-role-button-fill.sub-selectable"))
        ).click()
        WebDriverWait(self.driver, 10).until(
            ec.element_to_be_clickable((By.XPATH, "//span[contains(text(), '2020')]"))
        ).click()
        # 9 | selectWindow | handle=${win7134} |
        #self.driver.find_element(By.CSS_SELECTOR, "#container9c5b1cb7-6f94-99ed-d3a3-82b84a058a8d .fill").click()
        WebDriverWait(self.driver, 10).until(
            ec.visibility_of_element_located((By.XPATH,
                                              "//div[contains(@class, 'content text ui-role-button-text') and contains(text(), 'Descargar')]"))
        ).click()
        # 10 | close |  |
        self.vars["window_handles"] = self.driver.window_handles
        # 11 | selectWindow | handle=${win7440} |
        self.driver.find_element(By.CLASS_NAME, "fill ui-role-button-fill sub-selectable").click()
        self.vars["win7134"] = self.wait_for_window(2000)
        self.driver.switch_to.window(self.vars["win7134"])
        self.driver.close()
        self.driver.switch_to.window(self.vars["win7440"])