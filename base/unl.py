# Generated by Selenium IDE

import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from selenium.common.exceptions import NoSuchElementException

class TestUnl():
  
  

  def __init__(self):
    self.options = webdriver.ChromeOptions()
    '''self.options.add_argument("--headless=new")'''
    self.options.add_experimental_option("detach", True)
    self.driver = webdriver.Chrome(options=self.options)
    self.vars = {}

  def buscar_y_clicar(self, texto, tags):
    """Busca un texto en una lista de tags y hace clic en el primero que encuentra."""
    for tag in tags:
        try:
            element = self.driver.find_element(By.LINK_TEXT, f"//{tag}[contains(text(), '{texto}')]")
            element.click()
            return
        except NoSuchElementException:
            continue
    print(f"No se encontró el texto '{texto}' en los tags proporcionados.")
  
  def test_busqueda_dinamica(self, url):
    #url = "https://www.unl.edu.ec/"  # Define la URL aquí o pasa como parámetro de clase
    busquedas = {
        "Transparencia": ["h5", "h4", "span", "a"],
        "2020": ["h5", "h4", "span", "a"],
        "Enero": ["h5", "h4", "span", "a"],
        #"Rendición de cuentas": ["h5", "h4", "span", "a"],
        "Presupuesto": ["h5", "h4", "span", "a"]
    }  # Define las búsquedas aquí o como un parámetro de clase
    self.driver.get(url)
    for texto, tags in busquedas.items():
        self.buscar_y_clicar(texto, tags)

  
  def teardown_method(self):
    self.driver.quit()

  def wait_for_window(self, timeout = 2):
    time.sleep(round(timeout / 2000))
    wh_now = self.driver.window_handles
    wh_then = self.vars["window_handles"]
    if len(wh_now) > len(wh_then):
      return set(wh_now).difference(set(wh_then)).pop()
    
  def test_unl(self, url, year, mes):
    # Test name: unl
    # Step # | name | target | value
    # 1 | open | https://www.unl.edu.ec/ | 
    self.driver.get(url)
    # 2 | setWindowSize | 1512x944 | 
    self.driver.set_window_size(1512, 944)
    # 3 | click | linkText=Transparencia | 
    self.driver.find_element(By.LINK_TEXT, "Transparencia").click()
    # 4 | click | linkText=2020 | 
    self.driver.find_element(By.LINK_TEXT, year).click()
    # 5 | click | css=#ui-id-3 > .field-content | 
    #self.driver.find_element(By.CSS_SELECTOR, "#ui-id-3 > .field-content").click()
    self.driver.find_element(By.XPATH, f"//span[@class='field-content' and contains(text(), '{mes}')]").click()
    # 6 | click | linkText=Literal g.- Presupuesto de la Institución | 
    self.vars["window_handles"] = self.driver.window_handles
    self.driver.find_element(By.LINK_TEXT, "Literal g.- Presupuesto de la Institución").click()
    self.vars["win624"] = self.wait_for_window(2000)
  
